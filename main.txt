==========================
パフォーマンスと環境の測定
==========================

----
概要
----

計算のパフォーマンスは、アプリケーションがいかにCPU、メモリ、I/Oを制御するかに依存している。
アプリケーションが行う制御をさらにメタに、ユーザーが、OSやアプリケーション自身を通して行うことが可能である。
ここではどのような制御が可能か、そのための要因（環境）の測定として何ができるかを解説する。

まず、近代の一般的な計算機について簡単に説明する。
計算機のおもな構造要素は、CPU、メモリ、大規模記憶装置があり、CPU-メモリ間およびCPU-大規模記憶装置間のアクセスは「不均一」である。
より詳細な説明は既存の情報
（https://access.redhat.com/documentation/ja-jp/red_hat_enterprise_linux/6/html/performance_tuning_guide/main-cpu）
を参照されたい。

多くの場合、ユーザーは「不均一」性を意識する必要はない。
しかしながら、長時間あるいは大規模計算を行う際には、ユーザーがこれを意識し、制御することで、パフォーマンスの改善が行える場合がある。
ここでは、このための一般的なツールを紹介する。

----------------
基本的な環境測定
----------------

CPU、メモリ、プロセス
^^^^^^^^^^^^^^^^^^^^^

CPUの情報は、Linuxでは/proc/cpuinfoに記録されている。動的に記録されており、ほぼリアルタイムの情報が得られる。
一方、topコマンドはインタラクティブにプロセス情報を取得するものであり、バッチ実行も可能である。
たとえば、30秒ごとにtopコマンドの情報を得たいときは、

[]$ top -b -d 30 > top.out &

のように実行する。

I/O
^^^

iotopは、topのI/O版である。ほぼ、topと同じオプションが用意されており、30秒ごとにiotopコマンドの情報を得たいときは、

[]# top -b -d 30 > top.out &

のように実行する。
root権限で実行する必要があることに注意する。

hdparmは、ハードディスクの情報を得るコマンドである。
実際にI/O(readのみ)の速度を計測する場合は、

[]# hdparm -tT /dev/mapper/vg0-lv0

のように実行する。root権限が必要である。

-----------------
Mathematicaの計測
-----------------

